{"version":3,"sources":["webpack:///./src/pagination.tsx","webpack:///./src/devlog-list-template.tsx"],"names":["Pagination","numPages","currentPage","prefix","isFirst","isLast","pathPrefix","prevPageLink","nextPageLink","css","rhythm","to","query","DevlogListTemplate","data","pageContext","nodes","allDevlog","title","map","id","image","parent","path","key","fluid","sharp","alt","excerpt","length","limit"],"mappings":"gWA+DeA,EAlDyB,SAAC,GAAsC,IAApCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAC1DC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBD,EAKzBK,EAAaH,EAAS,IAAIA,EAAP,IAAmB,IACtCI,EAAeH,EAAU,KAAH,GAAaE,GAHrBJ,EAAc,GAAM,EAAI,GAAKA,EAAc,GAGnC,IACtBM,EAAeH,EAAS,KAAH,GAAaC,GALpBJ,EAAc,GAKP,IAE3B,OACE,mBACEO,IAAKA,YAAF,sDAGUC,YAAO,IAHjB,oBAIgBA,YAAO,GAJvB,kCAWDN,GAAWG,GACX,YAAC,OAAD,CACEE,IAAG,EAIHE,GAAIJ,GALN,eAUAF,GAAUG,GACV,YAAC,OAAD,CACEC,IAAG,EAIHE,GAAIH,GALN,Y,8zBC0FKI,EAAQ,aA0BNC,UAnIyC,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACvDC,EAAUF,EAAKG,UAAfD,MAER,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKE,MAAM,WAEX,mBACET,IAAG,GAIH,kBACEA,IAAG,GAMH,sBACE,YAAC,OAAD,CAAME,GAAG,KAAT,qBAKN,gCAEA,uBACGK,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOH,EAAd,EAAcA,MAAOI,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,KAA7B,OACT,uBACEd,IAAG,EAYHe,IAAKJ,GAEL,YAAC,OAAD,CACET,GAAIY,EACJd,IAAG,GAYH,YAAC,IAAD,CACEA,IAAG,EAGHgB,MAAOJ,EAAMK,MAAMD,MACnBE,IAAKT,KAIT,mBACET,IAAG,GAUH,kBACEA,IAAKA,YAAF,cACaC,YAAO,IADpB,KAGHQ,MAAOA,GAEP,YAAC,OAAD,CAAMP,GAAIY,GAAOL,IAGnB,iBACET,IAAG,GAKFa,EAAOM,eAOjBZ,EAAMa,QAAUd,EAAYe,MAAQ,YAAC,EAAD,GAAY3B,OAAO,UAAaY,IAAkB","file":"component---src-devlog-list-template-tsx-4b875158c4d7776bb8a4.js","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Link } from 'gatsby';\nimport type { FC } from 'react';\n\nimport { rhythm } from './styles/typography';\n\ntype PaginationProps = {\n  numPages: number;\n  currentPage: number;\n  prefix: string;\n};\n\nconst Pagination: FC<PaginationProps> = ({ numPages, currentPage, prefix }) => {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n\n  const nextPageNum = currentPage + 1;\n  const prevPageNum = currentPage - 1 === 1 ? '' : currentPage - 1;\n\n  const pathPrefix = prefix ? `/${prefix}/` : '/';\n  const prevPageLink = isFirst ? null : `${pathPrefix}${prevPageNum}/`;\n  const nextPageLink = isLast ? null : `${pathPrefix}${nextPageNum}/`;\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        justify-content: space-between;\n        padding: ${rhythm(0.7)} 0;\n        margin-bottom: ${rhythm(1)};\n\n        svg {\n          vertical-align: middle;\n        }\n      `}\n    >\n      {!isFirst && prevPageLink && (\n        <Link\n          css={css`\n            order: 1;\n            justify-self: flex-start;\n          `}\n          to={prevPageLink}\n        >\n          &larr; Previous\n        </Link>\n      )}\n      {!isLast && nextPageLink && (\n        <Link\n          css={css`\n            order: 2;\n            justify-self: flex-end;\n          `}\n          to={nextPageLink}\n        >\n          Next &rarr;\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default Pagination;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport type { FluidObject } from 'gatsby-image';\nimport type { FC } from 'react';\n\nimport Layout from './layout';\nimport Seo from './seo';\nimport { rhythm } from './styles/typography';\nimport Pagination from './pagination';\n\ntype Node = {\n  id: string;\n  path: string;\n  slug: string;\n  title: string;\n  author: string;\n  image: { sharp: { fluid: FluidObject } };\n  parent: { excerpt: string };\n};\n\ntype DevlogListTemplateProps = {\n  data: {\n    allDevlog: { nodes: Node[] };\n  };\n  pageContext: {\n    limit: number;\n    skip: number;\n    numPages: number;\n    currentPage: number;\n  };\n};\n\nconst DevlogListTemplate: FC<DevlogListTemplateProps> = ({ data, pageContext }) => {\n  const { nodes } = data.allDevlog;\n\n  return (\n    <Layout>\n      <Seo title=\"Devlog\" />\n\n      <nav\n        css={css`\n          margin: 1.5em 0;\n        `}\n      >\n        <ul\n          css={css`\n            list-style: none;\n            margin: 0;\n            padding: 0;\n          `}\n        >\n          <li>\n            <Link to=\"/\">&larr; back to home</Link>\n          </li>\n        </ul>\n      </nav>\n\n      <h1>Devlog</h1>\n\n      <div>\n        {nodes.map(({ id, image, title, parent, path }) => (\n          <article\n            css={css`\n              border-bottom: 1px solid #ddd;\n              display: flex;\n              align-items: flex-start;\n              justify-content: space-between;\n              margin-top: 0;\n              padding: 1rem 0;\n\n              &:last-child {\n                border-bottom: none;\n              }\n            `}\n            key={id}\n          >\n            <Link\n              to={path}\n              css={css`\n                align-self: flex-start;\n                min-width: 100px;\n                display: none;\n\n                @media screen and (min-width: 60em) {\n                  & {\n                    display: initial;\n                  }\n                }\n              `}\n            >\n              <Img\n                css={css`\n                  border-radius: 3px;\n                `}\n                fluid={image.sharp.fluid}\n                alt={title}\n              />\n            </Link>\n\n            <div\n              css={css`\n                flex: 1;\n\n                @media screen and (min-width: 60em) {\n                  & {\n                    flex: 0.97;\n                  }\n                }\n              `}\n            >\n              <h3\n                css={css`\n                  margin: 0 0 ${rhythm(0.5)};\n                `}\n                title={title}\n              >\n                <Link to={path}>{title}</Link>\n              </h3>\n\n              <p\n                css={css`\n                  color: hsla(0, 0%, 0%, 0.63);\n                  margin: 0;\n                `}\n              >\n                {parent.excerpt}\n              </p>\n            </div>\n          </article>\n        ))}\n      </div>\n\n      {nodes.length >= pageContext.limit ? <Pagination prefix=\"devlog\" {...pageContext} /> : null}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allDevlog(limit: $limit, skip: $skip, sort: { fields: date, order: DESC }) {\n      nodes {\n        id\n        path\n        slug\n        title\n        author\n        image {\n          sharp: childImageSharp {\n            fluid(maxWidth: 100, maxHeight: 100) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        parent {\n          ... on Mdx {\n            excerpt(pruneLength: 80)\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default DevlogListTemplate;\n"],"sourceRoot":""}