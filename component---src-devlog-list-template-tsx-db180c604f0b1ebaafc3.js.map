{"version":3,"sources":["webpack:///./src/pagination.tsx","webpack:///./src/devlog-list-template.tsx"],"names":["Pagination","numPages","currentPage","prefix","isFirst","isLast","pathPrefix","prevPageLink","nextPageLink","css","rhythm","to","query","DevlogListTemplate","data","pageContext","title","allDevlog","nodes","map","id","image","parent","path","key","fluid","sharp","alt","excerpt"],"mappings":"gWA+DeA,EAlDyB,SAAC,GAAsC,IAApCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAC1DC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBD,EAKzBK,EAAaH,EAAS,IAAIA,EAAP,IAAmB,IACtCI,EAAeH,EAAU,KAAH,GAAaE,GAHrBJ,EAAc,GAAM,EAAI,GAAKA,EAAc,GAGnC,IACtBM,EAAeH,EAAS,KAAH,GAAaC,GALpBJ,EAAc,GAKP,IAE3B,OACE,mBACEO,IAAKA,YAAF,sDAGUC,YAAO,IAHjB,oBAIgBA,YAAO,GAJvB,kCAWDN,GAAWG,GACX,YAAC,OAAD,CACEE,IAAG,EAIHE,GAAIJ,GALN,eAUAF,GAAUG,GACV,YAAC,OAAD,CACEC,IAAG,EAIHE,GAAIH,GALN,Y,g3BC+FKI,EAAQ,aA0BNC,UAxIyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAT,OACtD,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,WAEX,mBACEP,IAAG,GAIH,kBACEA,IAAG,GAMH,sBACE,YAAC,OAAD,CAAME,GAAG,KAAT,qBAKN,gCAEA,uBACGG,EAAKG,UAAUC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOL,EAAd,EAAcA,MAAOM,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,KAA7B,OACxB,uBACEd,IAAG,EAYHe,IAAKJ,GAEL,YAAC,OAAD,CACET,GAAIY,EACJd,IAAG,GAYH,YAAC,IAAD,CACEA,IAAG,EAGHgB,MAAOJ,EAAMK,MAAMD,MACnBE,IAAKX,KAIT,mBACEP,IAAG,GAUH,kBACEA,IAAKA,YAAF,cACaC,YAAO,IADpB,KAGHM,MAAOA,GAEP,YAAC,OAAD,CAAML,GAAIY,GAAOP,IAGnB,iBACEP,IAAG,GAKFa,EAAOM,eAOlB,YAAC,EAAD,GAAYzB,OAAO,UAAaY,IAEhC,YAAC,OAAD,CACEN,IAAG,EAGHE,GAAG,KAJL","file":"component---src-devlog-list-template-tsx-db180c604f0b1ebaafc3.js","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Link } from 'gatsby';\nimport type { FC } from 'react';\n\nimport { rhythm } from './styles/typography';\n\ntype PaginationProps = {\n  numPages: number;\n  currentPage: number;\n  prefix: string;\n};\n\nconst Pagination: FC<PaginationProps> = ({ numPages, currentPage, prefix }) => {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n\n  const nextPageNum = currentPage + 1;\n  const prevPageNum = currentPage - 1 === 1 ? '' : currentPage - 1;\n\n  const pathPrefix = prefix ? `/${prefix}/` : '/';\n  const prevPageLink = isFirst ? null : `${pathPrefix}${prevPageNum}/`;\n  const nextPageLink = isLast ? null : `${pathPrefix}${nextPageNum}/`;\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        justify-content: space-between;\n        padding: ${rhythm(0.7)} 0;\n        margin-bottom: ${rhythm(1)};\n\n        svg {\n          vertical-align: middle;\n        }\n      `}\n    >\n      {!isFirst && prevPageLink && (\n        <Link\n          css={css`\n            order: 1;\n            justify-self: flex-start;\n          `}\n          to={prevPageLink}\n        >\n          &larr; Previous\n        </Link>\n      )}\n      {!isLast && nextPageLink && (\n        <Link\n          css={css`\n            order: 2;\n            justify-self: flex-end;\n          `}\n          to={nextPageLink}\n        >\n          Next &rarr;\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default Pagination;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport type { FluidObject } from 'gatsby-image';\nimport type { FC } from 'react';\n\nimport Layout from './layout';\nimport Seo from './seo';\nimport { rhythm } from './styles/typography';\nimport Pagination from './pagination';\n\ntype Node = {\n  id: string;\n  path: string;\n  slug: string;\n  title: string;\n  author: string;\n  image: { sharp: { fluid: FluidObject } };\n  parent: { excerpt: string };\n};\n\ntype DevlogListTemplateProps = {\n  data: {\n    allDevlog: { nodes: Node[] };\n  };\n  pageContext: {\n    limit: number;\n    skip: number;\n    numPages: number;\n    currentPage: number;\n  };\n};\n\nconst DevlogListTemplate: FC<DevlogListTemplateProps> = ({ data, pageContext }) => (\n  <Layout>\n    <Seo title=\"Devlog\" />\n\n    <nav\n      css={css`\n        margin: 1.5em 0;\n      `}\n    >\n      <ul\n        css={css`\n          list-style: none;\n          margin: 0;\n          padding: 0;\n        `}\n      >\n        <li>\n          <Link to=\"/\">&larr; back to home</Link>\n        </li>\n      </ul>\n    </nav>\n\n    <h1>Devlog</h1>\n\n    <div>\n      {data.allDevlog.nodes.map(({ id, image, title, parent, path }) => (\n        <article\n          css={css`\n            border-bottom: 1px solid #ddd;\n            display: flex;\n            align-items: flex-start;\n            justify-content: space-between;\n            margin-top: 0;\n            padding: 1rem 0;\n\n            &:last-child {\n              border-bottom: none;\n            }\n          `}\n          key={id}\n        >\n          <Link\n            to={path}\n            css={css`\n              align-self: flex-start;\n              min-width: 100px;\n              display: none;\n\n              @media screen and (min-width: 60em) {\n                & {\n                  display: initial;\n                }\n              }\n            `}\n          >\n            <Img\n              css={css`\n                border-radius: 3px;\n              `}\n              fluid={image.sharp.fluid}\n              alt={title}\n            />\n          </Link>\n\n          <div\n            css={css`\n              flex: 1;\n\n              @media screen and (min-width: 60em) {\n                & {\n                  flex: 0.97;\n                }\n              }\n            `}\n          >\n            <h3\n              css={css`\n                margin: 0 0 ${rhythm(0.5)};\n              `}\n              title={title}\n            >\n              <Link to={path}>{title}</Link>\n            </h3>\n\n            <p\n              css={css`\n                color: hsla(0, 0%, 0%, 0.63);\n                margin: 0;\n              `}\n            >\n              {parent.excerpt}\n            </p>\n          </div>\n        </article>\n      ))}\n    </div>\n\n    <Pagination prefix=\"devlog\" {...pageContext} />\n\n    <Link\n      css={css`\n        display: inline-block;\n      `}\n      to=\"/\"\n    >\n      &larr; back to home\n    </Link>\n  </Layout>\n);\n\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allDevlog(limit: $limit, skip: $skip, sort: { fields: date, order: DESC }) {\n      nodes {\n        id\n        path\n        slug\n        title\n        author\n        image {\n          sharp: childImageSharp {\n            fluid(maxWidth: 100, maxHeight: 100) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        parent {\n          ... on Mdx {\n            excerpt(pruneLength: 80)\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default DevlogListTemplate;\n"],"sourceRoot":""}